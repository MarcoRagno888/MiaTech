@use './colors' as *;
$link-size: 18px;
$card-width: 400px;
$i_div: 0;
//$colors: red, blue, yellow, green;
$base-color: #098;
$primary-color: #098;
$secondary-color: #fff;
$colors: (
    primary : $primary-color,
    secondary : $secondary-color,
    third: black,
    fourth: purple,
    fifth: blue
);


* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

@mixin main-header {
    width: 100vw;
    display: flex;
    justify-content: center;
    align-items: center;
    padding-top: 20px;
    padding-bottom: 20px;
    margin-bottom: 100px;


    .navbar {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 85%;

        ul {
            list-style: none;

            li {
                display: inline-block;
                font-size: $link-size;
            }

            .btn {
                text-decoration: none;

                &:hover {
                    color: $link-color;
                }
            }
        }
    }
}

.main-header-light {
    @include main-header();
}

.main-header-dark {
    @include main-header;
    background-color: #000000;

    .navbar ul li a {
        color: white;

        &:hover {
            color: yellow;
        }
    }
}

.contact-btn {
    @extend .btn !optional;
    background-color: $bg-color;
    border: 1px solid;
    border-color: $contact-border-color;
}

.wrapper {
    width: 100vw;
    display: flex;
    justify-content: center;
    align-items: center;

    .container {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 85%;

        .card {
            width: $card-width;
            height: 200px;
            border: 1px solid black;
            margin: 0 30px;

            &:first-child {
                width: calc($card-width / 3);
            }
        }
    }
}

@for $i from 1 to 3 {
    @if $i ==1 {
        .card-1 {
            background-color: grey;
        }
    }

    @if $i ==2 {
        .card-2 {
            background-color: aquamarine;
        }
    }
}


@function em($n, $base: 16px) {
    @return ($n / $base) * 1em;
}

.boxes {
    display: flex;
    gap: 20px;
    div {
        width: 150px;
        height: 150px;
        position: relative;
    }

    @for $i from 1 through 3 {
        div:nth-child(#{$i}) {
            background-color: lighten($base-color, $i * 5%); //vs darken()
        }
        div:nth-child(#{$i})::after {
            content: "#{$i}";
            position: absolute;
            background-color: darken(blue, $i * 10%);
            width: 50px;
            height: 50px;
            top: 0;
            left: 0;
            color: white;
        }
    }
}

@each $name, $color in $colors {
    .button-#{$name} {
        background-color: $color;
    }
}
